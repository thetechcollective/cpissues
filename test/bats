#!/usr/bin/env bats


#Assume that this is the correct root and that gitconfig is in test folder under root
ROOT_DIR=/workspaces/gh-cpissues
USER=$(gh api user --jq '.login')
path_to_gitconfig=$ROOT_DIR/test/test.gitconfig
path_to_cases=$ROOT_DIR/test/cases
DEST_REPO=$(git config --file $path_to_gitconfig setup.dest-repo)

#Please ensure to run this script from the directory that was created in setup.sh to avoid path-related errors.
setup_file() {
    gh cpissues thetechcollective/gh-cpissues --label testsample
}

@test "copy-correct-number-of-issues" {
    $path_to_cases/copy-correct-number-of-issues.bats
}

@test "issue-already-exist" {
    $path_to_cases/issue-already-exist.bats
}   

@test "no-issues-with-label" {
    $path_to_cases/no-issues-with-label.bats
}

@test "incorrect-syntax" {
    $path_to_cases/incorrect-syntax.bats
}

teardown_file() {
    delete_issues
}

delete_issues() {
    # List all issue numbers in the repository
    # Uses --repo as safety as to not delete all issues if run from wrong dir.
    ISSUE_NUMBERS=$(gh issue list --repo $USER/$DEST_REPO --json number --jq '.[].number')

    for ISSUE_NUMBER in $ISSUE_NUMBERS; do
        gh issue delete $ISSUE_NUMBER --repo $USER/$DEST_REPO --yes
    done
}